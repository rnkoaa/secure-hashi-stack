Register
PUT /v1/catalog/register

{
  "Datacenter": "dc1",
  "ID": "40e4a748-2192-161a-0510-9bf59fe950b5",
  "Node": "foobar",
  "Address": "192.168.10.10",
  "TaggedAddresses": {
    "lan": "192.168.10.10",
    "wan": "10.0.10.10"
  },
  "NodeMeta": {
    "somekey": "somevalue"
  },
  "Service": {
    "ID": "redis1",
    "Service": "redis",
    "Tags": [
      "primary",
      "v1"
    ],
    "Address": "127.0.0.1",
    "Port": 8000
  },
  "Check": {
    "Node": "foobar",
    "CheckID": "service:redis1",
    "Name": "Redis health check",
    "Notes": "Script based health check",
    "Status": "passing",
    "ServiceID": "redis1",
    "Definition": {
      "TCP": "localhost:8888",
      "Interval": "5s",
      "Timeout": "1s",
      "DeregisterCriticalServiceAfter": "30s"
    }
  },
  "SkipNodeUpdate": false
}

Deregister
PUT 	/v1/catalog/deregister
{
  "Datacenter": "dc1",
  "Node": "foobar"
}
---
{
  "Datacenter": "dc1",
  "Node": "foobar",
  "CheckID": "service:redis1"
}
---
{
  "Datacenter": "dc1",
  "Node": "foobar",
  "ServiceID": "redis1"
}

GET /catalog/datacenters
---

GET /catalog/nodes?dc=?near=?,node-meta=?
sample response:
[
  {
    "ID": "40e4a748-2192-161a-0510-9bf59fe950b5",
    "Node": "baz",
    "Address": "10.1.10.11",
    "Datacenter": "dc1",
    "TaggedAddresses": {
      "lan": "10.1.10.11",
      "wan": "10.1.10.11"
    },
    "Meta": {
      "instance_type": "t2.medium"
    }
  },
  {
    "ID": "8f246b77-f3e1-ff88-5b48-8ec93abf3e05",
    "Node": "foobar",
    "Address": "10.1.10.12",
    "Datacenter": "dc2",
    "TaggedAddresses": {
      "lan": "10.1.10.11",
      "wan": "10.1.10.12"
    },
    "Meta": {
      "instance_type": "t2.large"
    }
  }
]

GET services
GET	/catalog/services?dc=?near=?,node-meta=?
SAMPLE response
{
  "consul": [],
  "redis": [],
  "postgresql": [
    "primary",
    "secondary"
  ]
}

List Nodes for Service
GET	/catalog/service/:service?dc,tag,near,node-meta
$ curl \
    https://consul.rocks/v1/catalog/service/my-service

  [
    {
      "ID": "40e4a748-2192-161a-0510-9bf59fe950b5",
      "Node": "foobar",
      "Address": "192.168.10.10",
      "Datacenter": "dc1",
      "TaggedAddresses": {
        "lan": "192.168.10.10",
        "wan": "10.0.10.10"
      },
      "NodeMeta": {
        "somekey": "somevalue"
      },
      "CreateIndex": 51,
      "ModifyIndex": 51,
      "ServiceAddress": "172.17.0.3",
      "ServiceEnableTagOverride": false,
      "ServiceID": "32a2a47f7992:nodea:5000",
      "ServiceName": "foobar",
      "ServicePort": 5000,
      "ServiceTags": [
        "tacos"
      ]
    }
  ]

List Services for Node
GET /catalog/node/:node?dc=?
{
  "Node": {
    "ID": "40e4a748-2192-161a-0510-9bf59fe950b5",
    "Node": "foobar",
    "Address": "10.1.10.12",
    "Datacenter": "dc1",
    "TaggedAddresses": {
      "lan": "10.1.10.12",
      "wan": "10.1.10.12"
    },
    "Meta": {
      "instance_type": "t2.medium"
    }
  },
  "Services": {
    "consul": {
      "ID": "consul",
      "Service": "consul",
      "Tags": null,
      "Port": 8300
    },
    "redis": {
      "ID": "redis",
      "Service": "redis",
      "Tags": [
        "v1"
      ],
      "Port": 8000
    }
  }
}

List Checks for Node
/health/node/:node?dc=?
[
  {
    "ID": "40e4a748-2192-161a-0510-9bf59fe950b5",
    "Node": "foobar",
    "CheckID": "serfHealth",
    "Name": "Serf Health Status",
    "Status": "passing",
    "Notes": "",
    "Output": "",
    "ServiceID": "",
    "ServiceName": "",
    "ServiceTags": []
  },
  {
    "ID": "40e4a748-2192-161a-0510-9bf59fe950b5",
    "Node": "foobar",
    "CheckID": "service:redis",
    "Name": "Service 'redis' check",
    "Status": "passing",
    "Notes": "",
    "Output": "",
    "ServiceID": "redis",
    "ServiceName": "redis",
    "ServiceTags": ["primary"]
  }
]

List Checks for Service
	/health/checks/:service?dc,near?node-meta?

  [
    {
      "Node": "foobar",
      "CheckID": "service:redis",
      "Name": "Service 'redis' check",
      "Status": "passing",
      "Notes": "",
      "Output": "",
      "ServiceID": "redis",
      "ServiceName": "redis",
      "ServiceTags": ["primary"]
    }
  ]

List Nodes for Service
GET	/health/service/:service?dc?near?tag?node-meta?passing?
[
  {
    "Node": {
      "ID": "40e4a748-2192-161a-0510-9bf59fe950b5",
      "Node": "foobar",
      "Address": "10.1.10.12",
      "Datacenter": "dc1",
      "TaggedAddresses": {
        "lan": "10.1.10.12",
        "wan": "10.1.10.12"
      },
      "Meta": {
        "instance_type": "t2.medium"
      }
    },
    "Service": {
      "ID": "redis",
      "Service": "redis",
      "Tags": ["primary"],
      "Address": "10.1.10.12",
      "Port": 8000
    },
    "Checks": [
      {
        "Node": "foobar",
        "CheckID": "service:redis",
        "Name": "Service 'redis' check",
        "Status": "passing",
        "Notes": "",
        "Output": "",
        "ServiceID": "redis",
        "ServiceName": "redis",
        "ServiceTags": ["primary"]
      },
      {
        "Node": "foobar",
        "CheckID": "serfHealth",
        "Name": "Serf Health Status",
        "Status": "passing",
        "Notes": "",
        "Output": "",
        "ServiceID": "",
        "ServiceName": "",
        "ServiceTags": []
      }
    ]
  }
]

List Checks in State
GET	/health/state/:state?dc?near?node-meta?

$ curl \
    https://consul.rocks/v1/health/state/passing
    [
      {
        "Node": "foobar",
        "CheckID": "serfHealth",
        "Name": "Serf Health Status",
        "Status": "passing",
        "Notes": "",
        "Output": "",
        "ServiceID": "",
        "ServiceName": "",
        "ServiceTags": []
      },
      {
        "Node": "foobar",
        "CheckID": "service:redis",
        "Name": "Service 'redis' check",
        "Status": "passing",
        "Notes": "",
        "Output": "",
        "ServiceID": "redis",
        "ServiceName": "redis",
        "ServiceTags": ["primary"]
      }
    ]

GET	/kv/:key?dc?recurse(true?,false?)?raw(true,false)?keys(boolean)?separator('/')?
$ curl \
    https://consul.rocks/v1/kv/my-key
    [
      {
        "CreateIndex": 100,
        "ModifyIndex": 200,
        "LockIndex": 200,
        "Key": "zip",
        "Flags": 0,
        "Value": "dGVzdA==",
        "Session": "adf4238a-882b-9ddc-4a9d-5b6758e4159e"
      }
    ]

Create/Update Key
PUT /kv/:key